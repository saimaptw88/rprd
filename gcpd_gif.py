from PIL import Image, ImageDraw, ImageFont

# generate animation gif

class VehicleGif:
    def __init__(self):
        # grid size
        self.grid_scale = 200
        # grid scale
        self.grid_x = 0
        self.grid_y = 0
        # grid width
        self.grid_width = 3
        # animation resolution
        self.a_res = 10
        # shape of car
        self.car_width = 100
        self. car_height = 50
        # text color
        self.color_text = (0,0,0)
        # background color
        self.color_back = (255,255,255)
        # grid clor
        self.color_grid = (0,0,0)
        #car colors (dictionary)
        self.car_color = {}
        # car margins (dictionary)
        self.x_margin = {}
        self.y_margin = {}
        self.y_bup = 0

    def draw_car (self, dw, x, y, t, c):
        dw.rectangle((x, y, x + self.car_width, y + self.car_height), fill = c)
        dw.text((x, y), t, self.color_text)

    def draw_grid (self, dw, x, y):
        dw.rectangle((0,0, self.grid_scale * x, self.grid_scale * y), fill=None, outline=self.color_grid, width=self.grid_width)
        for i in range(x - 1):
            dw.line(((i+1)*self.grid_scale, 0, (i+1)*self.grid_scale, self.grid_scale * y), fill = self.color_grid, width = self.grid_width)
        for j in range (y - 1):
            dw.line ((0, (j + 1) * self.grid_scale, self.grid_scale * x, (j + 1) * self.grid_scale), fill = self.color_grid, width = self.grid_width)

    #cs: [(x1,y1,x2,y2,xm, ym,c,t)]
    # (x1, y1): source
    # (x2, y2): destination
    # xm: x margin
    # ym: y margin
    # c: color
    # t: text
    def move_cars (self, cs):
        imgs = []
        for i in range (self.a_res + 1):
            img = Image.new("RGB", (self.grid_scale * self.grid_x, self.grid_scale * self.grid_y),  self.color_back)
            drw = ImageDraw.Draw(img)
            self.draw_grid(drw, self.grid_x, self.grid_y)
            for (x1, y1, x2, y2, xm, ym, c, t) in cs:
                src_x = x1 * self.grid_scale + xm
                src_y = y1 * self.grid_scale + ym
                dst_x = x2 * self.grid_scale + xm
                dst_y = y2 * self.grid_scale + ym
                dx = (dst_x - src_x) / self.a_res
                dy = (dst_y - src_y) / self.a_res
                self.draw_car (drw, x1 * self.grid_scale + xm + dx * i , y1 * self.grid_scale + ym + dy * i, t, c)
            imgs.append(img)
        return imgs

    def make_scenario (self, hss):
        mss = []
        for hs in hss:
            src = []
            src_n = []
            m = []
            ms = []
            cnt = 0
            cs = 1
            for (c, n, l, p, s) in hs:
                if s == 0:
                    src.append((l,p,c,s))
                elif s == cs:
                    m.append((src[cnt][0], src[cnt][1], src[cnt][2], src[cnt][3], l, p, c, s))
                    src_n.append((l,p,c,s))
                    cnt = cnt + 1
                else:
                    cs = s
                    ms.append(m)
                    m = []
                    cnt = 0
                    src = src_n
                    src_n = []
                    src_n.append((l,p,c,s))
                    m.append((src[cnt][0], src[cnt][1], src[cnt][2], src[cnt][3], l, p, c, s))
                    cnt = cnt + 1
            ms.append(m)
            mss.append(ms)
        return mss

    # hss: history generated by road_gen
    # f_name: file name
    # car_color: colors of cars (RGB, dictionary)
    # x_margin: x margin of cars (dictionary)
    # y_margin: y margin of cars (dictionary)
    # bup: raising of y
    def gen_gif(self, hss, f_name):
        mss = self.make_scenario(hss)
        cnt = 0
        images = []
        for ms in mss:
            for m in ms:
                move_list = []
                for (src_x, src_y, src_c, src_s, dst_x, dst_y, dst_c, dst_s) in m:
                    move_list.append((src_x, self.grid_y - 1 - self.y_bup - src_y , dst_x, self.grid_y - 1 - self.y_bup - dst_y, self.x_margin[src_c], self.y_margin[src_c], self.car_color[src_c], src_c))
                images = images + self.move_cars (move_list)
            images[0].save('%s-%d.gif'%(f_name, cnt), save_all=True, append_images=images[1:], optimize=False, duration=40, loop=1)
            cnt = cnt + 1
            images = []
    
    def gen_gif_all(self, hss, f_name):
        mss = self.make_scenario(hss)
        cnt = 0
        images = []
        for ms in mss:
            for m in ms:
                move_list = []
                for (src_x, src_y, src_c, src_s, dst_x, dst_y, dst_c, dst_s) in m:
                    move_list.append((src_x, self.grid_y - 1 - self.y_bup - src_y , dst_x, self.grid_y - 1 - self.y_bup - dst_y, self.x_margin[src_c], self.y_margin[src_c], self.car_color[src_c], src_c))
                images = images + self.move_cars (move_list)
        images[0].save('%s.gif' % f_name, save_all=True, append_images=images[1:], optimize=False, duration=40, loop=1)
